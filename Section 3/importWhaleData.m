function BlueWhaleData = importWhaleData(filename, dataLines)
%IMPORTFILE Import data from a text file
%  BLUEWHALEDATA = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  BLUEWHALEDATA = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  BlueWhaleData = importfile("/MATLAB Drive/MATLAB Course Files/Section 3/BlueWhaleData.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 02-Jul-2025 23:35:57

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 8);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["individual_local_identifier", "timestamp", "longitude", "latitude", "sensorQuality", "sensorMeasurements", "sensor_type", "manually_marked_outlier"];
opts.VariableTypes = ["categorical", "datetime", "double", "double", "categorical", "double", "categorical", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "manually_marked_outlier", "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["individual_local_identifier", "sensorQuality", "sensor_type", "manually_marked_outlier"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "timestamp", "InputFormat", "yyyy-MM-dd HH:mm:ss.SSS", "DatetimeFormat", "preserveinput");

% Import the data
BlueWhaleData = readtable(filename, opts);

end